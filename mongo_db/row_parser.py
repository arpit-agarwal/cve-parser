from common.row_parser import BaseRowParser

class RowParser(BaseRowParser):

    def do_and_dilimiter_handling(start, end, delimiter):
        if start.strip() == "":
            return "Invalid"
        if end == "earlier":
            end = start
            start = None
        return (start, end, None)
    
    def parse_version(self,version_string):
        # for finding sw_edition from version string
        versions = super().parse_version(version_string)
        if versions is not None:
            (start, end, sw_edition) = versions
            if start.strip() == "":
                return "Invalid"
            if end == "earlier":
                end = start
                start = None
                return (start, end, None)
            if not (start is None or start[0].isdigit()):
                parts = start.rsplit(" ", 1)
                start = parts[1]
                sw_edition = parts[0]
                return (start, end, sw_edition)

        return versions

    def get_cells(self,row):
        return row.find_all("p")

    def get_cpes(self, cells, vendor, product):
        return self.parse_cpes(cells[self.version].text,
                                    vendor,
                                    product, False)

