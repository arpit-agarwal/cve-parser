
from datetime import datetime
import json



class JSONWriter:

    def __init__(self, alerts, row_parser):
        self.alerts = alerts
        self.row_parser = row_parser

    def get_security_alerts_json(self, type_, vendor, url, product, webpage_name):
        securtiy_alerts = {
            "type": type_,
            "source": vendor,
            "cves": self.parse_alerts(vendor, url,product, webpage_name)
        }
        return json.dumps(securtiy_alerts)

    def parse_alerts(self, vendor, url,product, webpage_name):
        collection = list()
        alerts_list = self.alerts

        for alert in alerts_list:
            collection.append(self.row_parser.parse(
                alert, vendor, url,product, webpage_name))
        return collection

    # def parse_alert(self, alert, vendor, url,product, webpage_name):
    #     # print(alert.prettify())
    #     row = alert.find_all("p")
    #     published_date = get_publish_date(
    #         row[TableColumnIndex.PUBLISHINGDATE].text,
    #         PUBLISHING__DATE_INPUT_FORMAT)
    #     json_row = {
    #         "timestamp": format_date(datetime.utcnow(), TIMESTAMP_FORMAT),
    #         "published_date": format_date(published_date, TIMESTAMP_FORMAT),
    #         "id": row[TableColumnIndex.CVE].text,
    #         "url": url,
    #         "name": webpage_name,
    #         "description": row[TableColumnIndex.DESCRIPTION].text,
    #         "cpes":  self.parse_cpes(row[TableColumnIndex.VERSION].text,
    #                                  vendor,
    #                                  product)
    #     }
    #     return json_row

    